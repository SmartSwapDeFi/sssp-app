/* You can add global styles to this file, and also import other style files */

@charset "utf-8";
@font-face {
    font-family: "Poppins-Regular";
    src: url("./fonts/Poppins-Regular.ttf");
}
@font-face {
    font-family: "Poppins-Medium";
    src: url("./fonts/Poppins-Medium.ttf");
}
@font-face {
    font-family: "Poppins-Bold";
    src: url("./fonts/Poppins-Bold.ttf");
}
html,
body {
    height: 100%;
}

body {
    margin: 0;
    font-family: Poppins-Regular, "Helvetica Neue", sans-serif;
    // -webkit-font-smoothing: antialiased;
}

html {
    width: 100%;
    height: 100%;
}

html body {
    background-color: #ffff;
}

/*css 初始化 */

@media (min-width: 300px) {
    html {
        font-size: 80px;
    }
}

@media (min-width: 310px) {
    html {
        font-size: 82.66666667px;
    }
}

@media (min-width: 320px) {
    html {
        font-size: 85.33333333px;
    }
}

@media (min-width: 360px) {
    html {
        font-size: 96px;
    }
}

@media (min-width: 375px) {
    html {
        font-size: 100px;
    }
}

@media (min-width: 384px) {
    html {
        font-size: 102.4px;
    }
}

@media (min-width: 400px) {
    html {
        font-size: 106.66666667px;
    }
}

@media (min-width: 412px) {
    html {
        font-size: 109.86666667px;
    }
}

@media (min-width: 414px) {
    html {
        font-size: 110.4px;
    }
}

@media (min-width: 424px) {
    html {
        font-size: 113.06666667px;
    }
}

@media (min-width: 450px) {
    html {
        font-size: 120px;
    }
}

@media (min-width: 480px) {
    html {
        font-size: 128px;
    }
}

@media (min-width: 540px) {
    html {
        font-size: 144px;
    }
}

@media (min-width: 600px) {
    html {
        font-size: 160px;
    }
}

@media (min-width: 640px) {
    html {
        font-size: 170.66666667px;
    }
}

@media (min-width: 720px) {
    html {
        font-size: 192px;
    }
}

@media (min-width: 750px) {
    html {
        font-size: 200px;
    }
}

@media (min-width: 768px) {
    html {
        font-size: 204.8px;
    }
}

html {
    width: 100%;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    height: 100%;
}

body {
    width: 100%;
    height: 100%;
    font-size: 12px;
    /* background: #f2f3f8; */
    background: #999;
    margin: 0 auto;
    padding: 0;
}

.red {
    color: #d74e5a !important;
}

.green {
    color: #41b37d !important;
}

*:before,
*:after {
    margin: 0;
    padding: 0;
}

*::-webkit-scrollbar {
    width: 0px;
}

*::-webkit-scrollbar-thumb {
    border-radius: 10px;
    background: rgba(0, 0, 0, 0.2);
}

*::-webkit-scrollbar-track {
    border-radius: 0;
    background: rgba(0, 0, 0, 0.1);
}

input[type="radio"] {
    padding: 0;
}

input[type="search"] {
    -webkit-appearance: textfield;
}

html,
ul,
li,
ol,
dl,
dd,
dt,
p,
h1,
h2,
h3,
h4,
h5,
h6,
form,
fieldset,
legend,
img {
    margin: 0;
    padding: 0;
}

/*各浏览器显示不同，去掉蓝色边框*/
fieldset,
img,
input,
button {
    border: none;
    padding: 0;
    margin: 0;
    outline-style: none;
}

ul,
ol {
    list-style: none;
}

/*统一组合框的默认样式*/
select,
input,
button {
    vertical-align: middle;
    outline: none;
}

// select,
// // input,
// textarea {
//     margin: 0;
//     border: none;
// }

// input {
//     padding-top: 0;
//     padding-bottom: 0;
//     border-radius: 0;
//     -webkit-appearance: none;
//     -moz-appearance: none;
//     outline: none;
// }

/*防止拖动 影响布局*/
textarea {
    resize: none;
}

/*去掉行内替换元素空白缝隙*/
img {
    border: 0;
    vertical-align: middle;
}

table {
    border-collapse: collapse;
}

/*清除浮动*/
.clearfix:after {
    display: block;
    content: "";
    height: 0;
    line-height: 0;
    visibility: hidden;
    clear: both;
}

.clearfix {
    zoom: 1;
}

a {
    color: #666;
    text-decoration: none;
}

a:hover {
    color: #417df8;
    text-decoration: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-decoration: none;
    font-weight: normal;
    font-size: 100%;
}

s,
i,
em {
    font-style: normal;
    text-decoration: none;
}

.l {
    float: left;
}

.r {
    float: right;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none !important;
}

input[type="number"] {
    -moz-appearance: textfield;
    /* firefox */
}

// @import '@angular/material/prebuilt-themes/deeppurple-amber.css';

@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-indigo);
$candy-app-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$candy-app-theme: mat-light-theme(
    (
        color: (
            primary: $candy-app-primary,
            accent: $candy-app-accent,
            warn: $candy-app-warn,
        ),
    )
);
$my-theme-primary: mat-palette($mat-indigo, 700, 300, 900);
$my-theme-accent: mat-palette($mat-blue);
$my-theme-warn: mat-palette($mat-deep-orange, A200);

// create theme (use mat-dark-theme for themes with dark backgrounds)
$my-theme: mat-light-theme($my-theme-primary, $my-theme-accent, $my-theme-warn);
// Define a custom typography config that overrides the font-family as well as the
// `headlines` and `body-1` levels.
$my-theme-typography: mat-typography-config(
    $font-family: "Poppins-Regular",
);
// Override typography CSS classes (e.g., mat-h1, mat-display-1, mat-typography, etc.).
@include mat-base-typography($my-theme-typography);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($my-theme);
